
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dario_centric'
version: '0.0.1'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'dario_centric'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

query-comment: "run by {{ target.user }} in dbt"


vars:  # project generic variables
    project_name: milestone_billing # variable of specific project name

    raw_database:  "{{ 'dwh' if target.name.startswith('prod') else target.database }}"
                        # raw_schema is in which db schema the source data exists
                        # could have ods - all unitied tenants schema 
                        # or specific tenant schema for example - comdata_dbo
                        # Pay Attention that in specific tenant schema all tables doesn't include tenant_id column!
        
    run_date: (select case when date_value > current_date 
                           then current_date 
                           else date_value end as run_date
                    from {{ var('raw_database') }}.meta.params_tbl
                    where process_name = '{{ var('project_name') }}'
                    and parameter_name = 'run_date')

    employer_id: (select coalesce(num_value, -1) as employer_id
                    from {{ var('raw_database') }}.meta.params_tbl
                    where process_name = '{{ var('project_name') }}'
                    and parameter_name = 'employer_id')

    incremental_loading_days_scope: 1


    # naming conv.: m2 = milestone2 params and so on
    m1_charge:    250

    m2_charge:    100
    m2_start_day: 1     # since CURRENT_PERIOD_START_DT (inclusive)
    m2_end_day:   28    # since CURRENT_PERIOD_START_DT (inclusive)
    m2_bp_daily_measurement_count: 2  # 2 blood pressure measurements on separate calendar days between 1-28 inclusive 
    m2_crm_alerts_day: 24

    m3_charge:    100
    m3_start_day: 29     # since CURRENT_PERIOD_START_DT (inclusive)
    m3_end_day:   63     # since CURRENT_PERIOD_START_DT (inclusive)
    m3_bp_daily_measurement_count: 2  # 2 blood pressure measurements on separate calendar days between 1-28 inclusive     
    m3_crm_alerts_day: 55

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.




models:
  dario_centric:

    #pre-hook:
        # - "{{ logging.log_model_start_event() }}" # dbt way to store logs
    #post-hook:
        # - "{{ logging.log_model_end_event() }}" # dbt way to store logs

    elig_src:
      # Config indicated by + and applies to all files under models/example/
      # enabled: true    # configs defined here are applied to _all_ packages
        tags: 
            - elig

    milestone_billing_users_dim:
      enabled: true
      post-hook:
                - update {{ var('raw_database') }}.meta.params_tbl 
                    set date_value = date_value + 1
                    where process_name = '{{ var('project_name') }}'
                    and parameter_name = 'run_date'
                    and date_value is not null
                    and date_value <= current_date
                #   after succesful model run, we're preparing run_date for the next run
    

